blueprint:
  name: Send Notification for Home Assistant Alert
  description: Send notification on your preferred channel when there is a new Home
    Assistant alert published
  domain: automation
  input:
    notifier:
      name: Notifier
      description: Name of integration you prefer to use for notifications (i.e. what
        comes after `notify.` in the service call). Defaults to `persistent_notification`
      default: persistent_notification
    title:
      name: Notification title
      description: Title of notification when there is an alert. Defaults to "New
        Home Assistant alert"
      default: New Home Assistant alert
    urls_supported:
      name: URLs are supported
      description: True if your notification platform supports clicking the notification
        to open a URL, false to just include the alert URL in the message body
      selector:
        boolean: {}
      default: false
    additional_data:
      name: Additional data for notification
      description: Additional data to include in service call if your notification
        platform has extended functionality. Will need to write as a JSON object (ex.
        `{"badge":"https://alerts.home-assistant.io/images/favicon.png", "priority":"high"}`)
      default: '{}'
    feed_url:
      name: Feed URL
      description: Used for testing automation by setting to a custom URL so you can
        create fake HA alerts and see it in action. Leave blank otherwise so it defaults
        to the normal HA alert feed
      default: https://alerts.home-assistant.io/feed.xml
  source_url: https://community.home-assistant.io/t/get-notified-any-time-there-is-a-new-home-assistant-alert/256924
mode: parallel
variables:
  notifier: !input 'notifier'
  urls_supported: !input 'urls_supported'
  additional_data: !input 'additional_data'
trigger:
  platform: event
  event_type: feedreader
  event_data:
    feed_url: !input 'feed_url'
action:
- service: notify.{{ notifier }}
  data:
    title: !input 'title'
    message: '{{ trigger.event.data.title + ('''' if urls_supported else ''

      '' + trigger.event.data.link) }}'
    data: '{% set data = additional_data | from_json %}{% if urls_supported %}{{ dict(data,
      url=trigger.event.data.link) }}{% else %}{{ data }}{% endif %}'
