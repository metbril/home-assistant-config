blueprint:
  source_url: https://github.com/metbril/home-assistant-blueprints/blob/main/automation/zha_ikea_tradfri_2button_onoff_brightness.yaml
  name: ZHA - IKEA TRADFRI - 2 Button Remote - On/Off and Brightness
  description: Simulate IKEA TRADFRI 2 button remote connected through ZHA.
  domain: automation
  input:
    remote:
      name: IKEA TRADFRI remote control
      description: Select the remote control to use.
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          model: TRADFRI on/off switch
          multiple: false
    light:
      name: Light
      description: Select the light entity to control.
      selector:
        entity:
          domain: light
          multiple: false
    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 100.0
          max: 1000.0
          step: 100.0
          unit_of_measurement: milliseconds
          mode: slider
      default: 500
mode: restart
max_exceeded: silent
variables:
  var_speed: !input speed
  transition_speed: '{{ (var_speed / 1000) | float(0) }}'
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input remote
action:
- choose:
  - conditions: '{{ trigger.event.data.command == "on" }}'
    sequence:
    - service: light.turn_on
      target:
        entity_id: !input light
      data:
        transition: '{{ transition_speed }}'
  - conditions: '{{ trigger.event.data.command == "move_with_on_off" }}'
    sequence:
    - repeat:
        while: []
        sequence:
        - service: light.turn_on
          target:
            entity_id: !input light
          data:
            brightness_step_pct: 10
            transition: '{{ transition_speed }}'
        - delay:
            milliseconds: !input speed
  - conditions: '{{ trigger.event.data.command == "off" }}'
    sequence:
    - service: light.turn_off
      target:
        entity_id: !input light
      data:
        transition: '{{ transition_speed }}'
  - conditions: '{{ trigger.event.data.command == "move" }}'
    sequence:
    - repeat:
        while: []
        sequence:
        - service: light.turn_on
          target:
            entity_id: !input light
          data:
            brightness_step_pct: -10
            transition: '{{ transition_speed }}'
        - delay:
            milliseconds: !input speed
  default: []
