---
# Package: Occupancy

input_boolean:
  occupancy_asleep:
    name: Slapen
    icon: mdi:sleep
  occupancy_away:
    name: Weg
    icon: mdi:exit-run
  occupancy_eco:
    name: Eco
    icon: mdi:sprout
  occupancy_guests:
    name: Gasten
    icon: mdi:human-female-female
  occupancy_home:
    name: Thuis
    icon: mdi:home
  occupancy_party:
    name: Feestje
    icon: mdi:party-popper
  occupancy_vacation:
    name: Vakantie
    icon: mdi:airplane

template:

  - sensor:
      - name: "Occupancy"
        unique_id: c84e912d-287c-4e51-8c41-30eebe8fece6
        state: >-
          {% set value = (states.input_boolean
            | select('search', 'occupancy_')
            | selectattr('state', 'eq', 'on')
            | map(attribute='entity_id') | list | first) %}
          {{ value.split('.')[1].split("_")[1] if value is defined else 'unknown' }}
        icon: >-
          {% set occupancy = states('sensor.occupancy') %}
          {% if occupancy is not in [None, 'unknown', 'unavailable'] %}
            {{ state_attr('input_boolean.occupancy_' + occupancy, 'icon') }}
          {% else %}
            mdi:home-off-outline
          {% endif %}

  - binary_sensor:
      - name: "Occupancy"
        unique_id: 80fb3594-f0d4-4ae4-8251-f31e1d9b301f
        state: >-
          {{ states.input_boolean | select('search', 'occupancy_')
              | selectattr('state', 'eq', 'on') | map(attribute='entity_id')
              | list | count != 0 }}
        icon: >-
          {{ state_attr('sensor.occupancy', 'icon') }}

automation:
  - alias: 'Huis: Synchroniseer bezetting status'
    id: '1661884728867'
    description: >
      Synchroniseer alle knoppen. Als er een wordt ingeschakeld, worden
      alle andere uitgeschakeld. Als alles is uitgeschakeld, wordt Thuis ingeschakeld.
    initial_state: true
    mode: queued

    trigger:
      - platform: state
        entity_id:
          - input_boolean.occupancy_home
          - input_boolean.occupancy_eco
          - input_boolean.occupancy_away
          - input_boolean.occupancy_asleep
          - input_boolean.occupancy_party
          - input_boolean.occupancy_guests
          - input_boolean.occupancy_vacation

    action:
      - variables:
          all_off: '{{ states.input_boolean | select(''search'', ''occupancy_'')  | selectattr(''state'',
            ''eq'', ''on'') | map(attribute=''entity_id'') | list | count == 0 }}'

      - choose:
          - conditions:
              - condition: template
                value_template: '{{ trigger.to_state.state == ''on'' }}'
            sequence:
              - service: input_boolean.turn_off
                data:
                  entity_id: "{{ states.input_boolean | select('search', 'occupancy_') | \n
                    \ map(attribute='entity_id') |\n  reject('equalto', trigger.entity_id)
                    | list | join(', ') }}\n"

          - conditions:
              - condition: template
                value_template: "{{ states.input_boolean | select('search', 'occupancy_')
                  \ \n  | selectattr('state', 'eq', 'on') \n  | map(attribute='entity_id')
                  | list | count == 0 }}"
            sequence:
              - service: input_boolean.turn_on
                data:
                  entity_id: input_boolean.occupancy_home

        default: []

  - alias: 'Huis: Herinnering over afwezigheid'
    description: >
      Notify when vacation or guest occupancy, and daily when still in vacation
      or guest mode. These modes let automations behave differently.
    id: '1661885320722'

    trigger:
      - platform: state
        entity_id: sensor.occupancy
        to: vacation
      - platform: state
        entity_id: sensor.occupancy
        to: guests
      - platform: time
        at: 09:00:00

    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.occupancy
            state: vacation
          - condition: state
            entity_id: sensor.occupancy
            state: guests

    variables:
      mode: '{{ states(''sensor.occupancy'') }}'
      name: '{{ ''input_boolean.occupancy_'' + mode }}'
      label: '{{ state_attr(name, ''friendly_name'') | lower }}'

    action:
      - service: notify.admin
        data:
          title: Bezetting
          message: >
            \U0001F9F7 De woningbezetting is nu ingesteld op
            {{ label }}.

  - id: '1662718496282'
    alias: 'Huis: automatisch ingeschakelen bezetting Weg'
    description: Set home occupance to 'Away' when no-one is at home.

    trigger:
      - platform: state
        entity_id: group.family
        from: home

    condition:
      - condition: not
        conditions:
          - condition: state
            entity_id: input_boolean.occupancy_vacation
            state: 'on'
          - condition: state
            entity_id: input_boolean.occupancy_guests
            state: 'on'
          - condition: state
            entity_id: input_boolean.occupancy_away
            state: 'on'

    action:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.occupancy_away
      - service: persistent_notification.create
        data:
          message: Niemand meer thuis. Huisbezetting automatisch ingesteld op 'Weg'.
          title: Huisbezetting
          notification_id: auto_occupancy
    mode: single

  - id: '1662718880324'
    alias: 'Huis: dismiss auto notifications'
    description: Dismiss any persistent notification that has been set due to auto switching
      of occupancy.
    mode: single

    trigger:
      - platform: state
        entity_id: input_boolean.occupancy_home
        to: 'on'

    action:
      - service: persistent_notification.dismiss
        data:
          notification_id: auto_occupancy

  - id: '1663060804510'
    alias: 'Huis: Auto set mode to Home'
    description: Set home occupance to 'Home' when someone comes home and state is away.
    mode: single

    trigger:
      - platform: state
        entity_id: group.family
        to: home

    condition:
      - condition: state
        entity_id: input_boolean.occupancy_away
        state: 'on'

    action:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.occupancy_home
      - service: persistent_notification.create
        data:
          message: Er is weer iemand thuis. Huisbezetting automatisch ingesteld op 'Thuis'.
          title: Huisbezetting
          notification_id: auto_occupancy
