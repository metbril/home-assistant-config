---
# Fuel package

homeassistant:
  customize_glob:
    sensor.diesel_*:
      icon: mdi:gas-station
      unit_of_measurement: €/L
    sensor.euro95_*:
      icon: mdi:gas-station
      unit_of_measurement: €/L
    sensor.lpg_*:
      icon: mdi:gas-station
      unit_of_measurement: €/L

sensor:
  # Brandstofprijzen custom component
  # https://github.com/metbril/home-assistant-brandstofprijzen
  #
  # I keep this sensor, to check if it keeps working with HA
  #
  - platform: brandstofprijzen

  # --- OCR sensors ---

  # Get fuel prices through OCR
  # The free OCR API is limited to 500 call/day AND 25000 requests per month.
  # Documentation at https://ocr.space/OCRAPI
  #
  # Since the API key is personal, the full call needs to be in secrets.yaml
  #
  # Base URL
  # https://api.ocr.space/parse/ImageUrl?apikey=APIKEY&language=dut&isTable=true&scale=true&url=IMAGEURL?lang=nl
  #

  # https://tankservice.app-it-up.com/Tankservice/v2/places/2318.png?lang=nl
  # https://directlease.nl/tankservice/
  - platform: rest
    name: Brandstoffen Dijktank Kanaalweg
    resource: !secret ocr_api_dijktank
    method: GET
    scan_interval: 3600 # seconds: 1h=3600 / 2h=7200 / 3h=10800 / 4h=14400 / 6h=21600 / 8h=28800 / 12h=43200
    value_template: "OK" # the default  returned json would exceed 255 character limit
    json_attributes:
      - ParsedResults

  # https://tankservice.app-it-up.com/Tankservice/v2/places/2248.png?lang=nl
  # https://directlease.nl/tankservice/
  - platform: rest
    name: Brandstoffen Tamoil Ommoord
    # yamllint disable-line rule:line-length
    resource: !secret ocr_api_ommoord
    method: GET
    # 1h=3600 / 2h=7200 / 3h=10800 / 4h=14400 / 6h=21600 / 8h=28800 / 12h=43200
    scan_interval: 3600 # seconds
    value_template: "OK" # returned json exceeds 255 char. limit
    json_attributes:
      - ParsedResults

template:
  # These sensors extract the fuel price from the OCR'ed prices
  # Done in 2 steps, so only 1 API call per station is required.
  # Can be done in 1 sensor if only 1 fuel type is needed.

  - sensor:
      - name: "Euro95 (Dijktank Kanaalweg)"
        state: >
          {{ state_attr(
            'sensor.brandstoffen_dijktank_kanaalweg',
            'ParsedResults')[0]['ParsedText'].split('\r\n')[3].split('€')[1]
            | replace(',', '.') | float }}

      - name: "Euro95 (Tamoil Ommoord)"
        state: >
          {{ state_attr(
            'sensor.brandstoffen_tamoil_ommoord',
            'ParsedResults')[0]['ParsedText'].split('\t\r\n')[4].split('€')[1]
            | replace(',', '.') | float(None) }}
