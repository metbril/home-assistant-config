################################################
## Packages / Host / Host
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'host'

    binary_sensor.cpu_high:
      device_class: problem
      friendly_name: CPU Hoog
    binary_sensor.cpu_hot:
      device_class: heat
      friendly_name: CPU Heet
    binary_sensor.db_large:
      device_class: problem
      friendly_name: Grote database

    sensor.cpu_temperature:
      friendly_name: Processortemperatuur
    sensor.disk_free:
      friendly_name: Beschikbare opslag
      icon: mdi:sd
    sensor.disk_use_percent:
      friendly_name: Gebruikte opslag
      icon: mdi:sd
    sensor.ha_uptime:
      friendly_name: Sinds laatste start HA
      icon: mdi:clock
    sensor.homeassistant_v2db:
      friendly_name: Grootte database
    sensor.homeassistantlog:
      friendly_name: Grootte logbestand
    sensor.last_boot:
      friendly_name: Laatste herstart
    sensor.memory_use_percent:
      friendly_name: Geheugengebruik
    sensor.network_in_eth0:
      friendly_name: Bytes ontvangen
      icon: mdi:download-network
    sensor.network_out_eth0:
      friendly_name: Bytes verzonden
      icon: mdi:upload-network
    sensor.ozw_logtxt:
      friendly_name: Grootte logbestand Z-Wave
    sensor.packets_in_eth0:
      friendly_name: Pakketten ontvangen
      icon: mdi:download-network
    sensor.packets_out_eth0:
      friendly_name: Pakketten verzonden
      icon: mdi:upload-network
    sensor.processor_use:
      friendly_name: Processorgebruik
    sensor.since_last_boot:
      friendly_name: Sinds laatste herstart

################################################
## Binary Sensor
################################################

binary_sensor:
  - platform: template
    sensors:
      cpu_high:
        value_template: '{{ states.sensor.processor_use.state | float > 80 }}'

      cpu_hot:
        value_template: '{{ states.sensor.cpu_temperature.state | float > 80 }}'

      db_large:
        value_template: '{{ states.sensor.homeassistant_v2db.state | float > 3000 }}'

################################################
## Sensor
################################################

sensor:
  - platform: systemmonitor
    resources:
      - type: memory_use_percent
      - type: processor_use
      - type: disk_use_percent
        arg: /
      - type: disk_free
        arg: /
      - type: last_boot
      - type: network_in
        arg: 'eth0'
      - type: network_out
        arg: 'eth0'
      - type: packets_in
        arg: 'eth0'
      - type: packets_out
        arg: 'eth0'

  - platform: command_line
    name: CPU Temperature
    command: "/bin/cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "Â°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'

  - platform: filesize
    file_paths:
      - !secret filesize_homeassistant_db
      - !secret filesize_homeassistant_log
      - !secret filesize_ozw_log

  - platform: command_line
    # https://home-assistant.io/components/sensor.command_line/
    name: "HA Uptime"
    command: echo "$(($(date +%s) - $(date -d "$(head -n1 /config/home-assistant.log | cut -d' ' -f-2)" +%s)))"
    scan_interval: 720 # seconds
    value_template: >-
      {% set uptime = value | int %}
      {% set seconds = uptime % 60 %}
      {% set minutes = ((uptime % 3600) / 60) | int %}
      {% set hours = ((uptime % 86400) / 3600) | int %}
      {% set days = (uptime / 86400) | int %}
      {% if days > 0 %}
        {% if days == 1 %}
          1 day
        {% else %}
          {{ days }} days
        {% endif %}
        {{ ', ' }}
      {% endif %}
      {{ '%02d' % hours }}:{{ '%02d' % minutes }}

  - platform: command_line
    name: bad_login
    command: "grep -c 'Login attempt' /config/home-assistant.log"
    value_template: '{{ value | int - 1 }}'

  ## Custom component
  ## https://github.com/custom-components/sensor.rpi_power
  - platform: rpi_power
    text_state: true

################################################
## Folder Watcher
## https://www.home-assistant.io/components/folder_watcher/
##
## Currently not yet working, error on startup
## Whitelisting '/backup' is not yet possible with hassio
## https://github.com/home-assistant/hassio-build/issues/129
###############################################

# folder_watcher:
#   - folder: /backup
#     patterns: '*.tar'

################################################
## Alert
################################################

alert:
  cpu_high:
    name: Gebruik CPU is hoog
    entity_id: binary_sensor.cpu_high
    state: 'on'
    repeat: 5 # minutes
    can_acknowledge: True
    skip_first: False
    notifiers:
      - admin

  cpu_hot:
    name: Temperatuur CPU is hoog
    entity_id: binary_sensor.cpu_high
    state: 'on'
    repeat: 5 # minutes
    can_acknowledge: True
    skip_first: False
    notifiers:
      - admin

  db_large:
    name: Database Large
    entity_id: binary_sensor.db_large
    state: 'on'
    repeat: # minutes
      - 15
      - 30
      - 60
      - 120
      - 240
    can_acknowledge: true
    skip_first: false
    notifiers:
      - admin

################################################
## Script
################################################
script:
  restart_home_assistant:
    sequence:
    - service: homeassistant.restart
  purge_database:
    sequence:
    - service: recorder.purge
      data:
        keep_days: 1
        repack: true

################################################
## Automation
################################################
automation:

  ## Send notification for new hassio backup
  - alias: New file alert
    trigger:
      platform: event
      event_type: folder_watcher
      event_data:
        event_type: created
    action:
      service: notify.admin
      data_template:
        title: New backup
        message: "Created {{ trigger.event.data.file }} in {{ trigger.event.data.folder }}"

  - id: rpi_power_issue
    alias: Power Supply Issue
    trigger:
    - platform: numeric_state
      entity_id: sensor.rpi_power_status
      value_template: '{{ state.attributes.value }}'
      above: 0
      for:
        minutes: 5
    condition: []
    action:
    - service: persistent_notification.create
      data_template:
        message: "De systeemvoeding meldt: '{{ states.sensor.rpi_power_status.state }}'. De vorige status was '{{ trigger.from_state.state }}' "
        title: Systeemvoeding
