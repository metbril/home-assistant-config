---
##################################################
# Packages / Energy / Appliances
##################################################

homeassistant:
  customize:
    sensor.washing_machine_daily_energy:
      friendly_name: "Wasmachine dagelijks verbruik"
    sensor.tumble_dryer_daily_energy:
      friendly_name: "Wasdroger dagelijks verbruik"
    sensor.close_in_boiler_daily_energy:
      friendly_name: "Close-in boiler dagelijks verbruik"

# Washing machine is on when power
template:
  #
  # Template sensors to fix a bug in some Neo wall plugs.
  # The applied constant is the equivalent of 0x7FFFFFFF.
  # Device precision is 2 decimals.
  #
  # https://community.home-assistant.io/t/energy-consumption-for-neo-coolcam-plug/219844/26?u=metbril
  #
  - sensor:
      - name: "Close-in Boiler Energy"
        unique_id: eb89a9e4-4fea-458a-b84c-1f82f24b63f1
        unit_of_measurement: kWh
        device_class: energy
        state_class: total_increasing
        state: >-
          {% set value = states('sensor.close_in_boiler_raw_energy') | float(0) %}
          {% set const = 21474836.47 %}
          {% if value < 0 %}{{ (value + const) | round(2) }}
          {% else %}{{ value }}
          {% endif %}

      - name: "Tumble Dryer Energy"
        unique_id: 76269b18-7159-4409-9f26-72128fa2e116
        unit_of_measurement: kWh
        device_class: energy
        state_class: total_increasing
        state: >-
          {% set value = states('sensor.tumble_dryer_raw_energy') | float(0) %}
          {% set const = 21474836.47 %}
          {% if value < 0 %}{{ (value + const) | round(2) }}
          {% else %}{{ value }}
          {% endif %}

  # Appliance is on when power usage detected
  - binary_sensor:
      - name: Washing Machine
        unique_id: 7a04404c-be07-4651-82d1-74a804d5cf25
        state: >
          {{ states("sensor.washing_machine_power")
          | float(0) > 4 }}
        delay_off: "00:00:30"
        icon: >
          {% if is_state("binary_sensor.washing_machine", "on") %}
            mdi:washing-machine
          {% else %}
            mdi:washing-machine-off
          {% endif %}

      - name: Tumble Dryer
        unique_id: e266f060-376f-4067-8b9d-c8a21e49f890
        state: >
          {{ states("sensor.tumble_dryer_power")
          | float(0) > 2 }}
        delay_off: "00:00:30"
        icon: >
          {% if is_state("binary_sensor.tumble_dryer", "on") %}
            mdi:tumble-dryer
          {% else %}
            mdi:tumble-dryer-off
          {% endif %}

utility_meter:
  washing_machine_daily_energy:
    source: sensor.washing_machine_energy
    cycle: daily

  tumble_dryer_daily_energy:
    source: sensor.tumble_dryer_energy
    cycle: daily

  close_in_boiler_daily_energy:
    source: sensor.close_in_boiler_energy
    cycle: daily

input_datetime:
  washing_machine_on:
    name: "Wasmachine laatst gestart"
    has_date: true
    has_time: true

  washing_machine_off:
    name: "Wasmachine laatst gereed"
    has_date: true
    has_time: true

  tumble_dryer_on:
    name: "Wasdroger laatst gestart"
    has_date: true
    has_time: true

  tumble_dryer_off:
    name: "Wasdroger laatst gereed"
    has_date: true
    has_time: true

input_number:
  washing_machine_on:
    min: 0
    max: 99999

  washing_machine_off:
    min: 0
    max: 99999

  tumble_dryer_on:
    min: 0
    max: 99999

  tumble_dryer_off:
    min: 0
    max: 99999

automation:

  ############################################################
  # Concept by @basnijholt
  # https://github.com/basnijholt/home-assistant-config/blob/master/scripts.yaml
  #
  - alias: "Appliances: appliance started or finished"
    id: b2b10f8b-811d-4d38-930f-9961f6c3ecaf
    mode: parallel

    trigger:
      - platform: state
        entity_id:
          # add more entities as appropriate
          - binary_sensor.washing_machine
          - binary_sensor.tumble_dryer

    variables:
      from_state: "{{ trigger.from_state.state }}"
      to_state: "{{ trigger.to_state.state }}"
      name: "{{ trigger.entity_id.split('.', 1)[1] }}"

    condition: >
      {{ (to_state == 'on' and from_state == 'off') or
        (to_state == 'off' and from_state == 'on') }}

    action:
      - service: input_datetime.set_datetime
        target:
          entity_id: "input_datetime.{{ name }}_{{ to_state }}"
        data:
          timestamp: "{{ now().timestamp() }}"

      - service: input_number.set_value
        target:
          entity_id: "input_number.{{ name }}_{{ to_state }}"
        data:
          value: "{{ states('sensor.' ~ name ~ '_energy') | float(0) }}"

      - condition: template
        value_template: "{{ to_state == 'off' }}"
        alias: "Appliance off"

      - variables:
          binary_sensor: "{{ 'binary_sensor.{}'.format(name) }}"
          energy_on_sensor: "{{ 'input_number.{}_on'.format(name) }}"
          energy_off_sensor: "{{ 'input_number.{}_off'.format(name) }}"
          time_on_sensor: "{{ 'input_datetime.{}_on'.format(name) }}"
          time_off_sensor: "{{ 'input_datetime.{}_off'.format(name) }}"
      - variables:
          start_time: "{{ states(time_on_sensor) | as_timestamp }}"
          end_time: "{{ states(time_off_sensor) | as_timestamp }}"
          start_kwh: "{{ states(energy_on_sensor) | float(0) }}"
          end_kwh: "{{ states(energy_off_sensor) | float(0) }}"
      - variables:
          total_time: "{{ (end_time - start_time) }}"
          total_kwh: "{{ end_kwh - start_kwh }}"
      - variables:
          friendly_name: "{{ state_attr( binary_sensor, 'friendly_name') }}"
          minutes: "{{ (total_time / 60) | round(0) }}"
          total_kwh_rounded: "{{ (total_kwh) | round(2) }}"
          price: "{{ (states('sensor.energy_rate_tarif_2') | float(0) * total_kwh) | round(2) }}"
          price_formatted: "{{'{:0.2f}'.format(price)|replace('.', ',') }}"

      - service: notify.robert
        data:
          title: "Apparatuur"
          message: >-
            {{ friendly_name }} is klaar na {{ minutes }} minuten
            en verbruikte {{ total_kwh_rounded }} kWh
            (â‚¬{{ price_formatted }}).
