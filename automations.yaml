- id: '1642157915331'
  alias: 'System: Home Assistant Alert'
  description: ''
  use_blueprint:
    path: CentralCommand/get-notified-any-time-there-is-a-new-home-assistant-alert.yaml
    input:
      notifier: robert
      urls_supported: true
- id: c1de5e22-30c1-41c6-873a-88e081e7048a
  alias: Signaallamp - bijwerken via scene
  description: Werk de signaallamp bij met behulp van de geselecteerde scene.
  trigger:
  - entity_id: input_select.signaallamp_scene
    platform: state
  action:
  - data:
      entity_id: '{{(''scene.signaal_'' ~ trigger.to_state.state)|lower| replace(''
        '',''_'')}}'
    service: scene.turn_on
- id: ff08a450-aa5f-4bc4-bf21-bdea71c552ce
  alias: Signaallamp - uitschakelen synchroniseren met scene
  description: Synchroniseer scene input (en activeer daarmee de scene) als de signaallamp
    handmatig wordt uitgeschakeld.
  trigger:
  - entity_id: light.signaal
    platform: state
    to: 'off'
  action:
  - data:
      entity_id: input_select.signaallamp_scene
      option: Uit
    service: input_select.select_option
- id: 26e358e0-da5c-4ef1-8349-e9f0bde623bd
  alias: Signaallamp - regenalarm melden op werkdagen
  description: Trigger rain alarm when rain expected on workdays between 6 and 9 am,
    but only when someone is home
  trigger:
  - above: 0
    entity_id: sensor.buienradar_precipitation_forecast_average
    platform: numeric_state
  condition:
  - condition: state
    entity_id: binary_sensor.signaallamp_ingeschakeld
    state: 'on'
  - condition: time
    after: 06:00:00
    before: 09:00:00
  - condition: state
    entity_id: binary_sensor.workday
    state: 'on'
  - condition: state
    entity_id: input_boolean.verlof
    state: 'off'
  - condition: state
    entity_id: sensor.occupancy
    state: home
  - condition: state
    entity_id: group.family
    state: home
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.signaallamp_scene
      option: Regenalarm
  mode: single
- id: ca89521c-7219-4e8e-acda-9c9537ff98a1
  alias: Signaallamp - regenalarm annuleren
  description: Annuleer regenalarm om 9:00 of als er geen regen meer wordt verwacht.
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.buienradar_precipitation_forecast_average'')
      |float==0}}'
  - at: 09:00:00
    platform: time
  condition:
  - condition: state
    entity_id: input_select.signaallamp_scene
    state: Regenalarm
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.signaallamp_scene
      option: Uit
- id: '1660920784418'
  alias: 'Media: Update Sonos Source Selector'
  description: Update input selector with when Sonos favorites update.
  trigger:
  - platform: state
    entity_id:
    - input_select.sonos_favorites
  - platform: homeassistant
    event: start
  condition: []
  action:
  - variables:
      favs: '{{ state_attr(''sensor.sonos_favorites'', ''items'').values() | list
        }}'
  - service: input_select.set_options
    data:
      options: '{{ favs }}'
    target:
      entity_id: input_select.sonos_favorites
  mode: restart
- id: '1660923058113'
  alias: 'Office: Play selected Sonos favorite on office speaker'
  description: Switch to selected favorite (playlist or radio) when Office speaker
    is already playing.
  trigger:
  - platform: state
    entity_id:
    - input_select.sonos_favorites
  condition:
  - condition: device
    device_id: 7bdba22c447d5ca9504e896de5e891d4
    domain: media_player
    entity_id: media_player.office_speaker
    type: is_playing
  action:
  - service: media_player.select_source
    target:
      entity_id: media_player.office_speaker
    data:
      source: '{{ states(''input_select.sonos_favorites'') }}'
  mode: single
- id: 934b4450-7816-4064-b906-3a3894d99345
  alias: Energy - Save consumption to file
  description: "Save energy consumption to file every hour, at the full hour.\nEntities
    used: \n- sensor.energy_consumption_tarif_1 \n- sensor.energy_consumption_tarif_2\n
    - sensor.gas_consumption"
  trigger:
  - platform: time_pattern
    hours: '*'
    minutes: '0'
    seconds: '0'
  action:
  - service: notify.save_energy_consumption
    data:
      message: '{{ now() }}, {{ states(''sensor.energy_consumption_tarif_1'') }},
        {{ states(''sensor.energy_consumption_tarif_2'') }}, {{ states(''sensor.gas_consumption'')}}'
  - service: logbook.log
    data:
      name: Energieverbruik (tarief 1)
      message: opgeslagen
      entity_id: sensor.energy_consumption_tarif_1
      domain: sensor
  - service: logbook.log
    data:
      name: Energieverbruik (tarief 2)
      message: opgeslagen
      entity_id: sensor.energy_consumption_tarif_2
      domain: sensor
  - service: logbook.log
    data:
      name: Gasverbruik
      message: opgeslagen
      entity_id: sensor.gas_consumption
      domain: sensor
- id: '1662102264901'
  alias: 'Zolder: Wasmachine is klaar'
  description: Verstuur meldingen als de wasmachine klaar is.
  use_blueprint:
    path: metbril/appliance_has_finished.yaml
    input:
      power_sensor: sensor.washing_machine_power
      energy_sensor: sensor.washing_machine_energy
      price_sensor: sensor.energy_consumption_tarif_1
      starting_hysteresis:
        hours: 0
        minutes: 1
        seconds: 0
      finishing_hysteresis:
        hours: 0
        minutes: 1
        seconds: 0
      starting_threshold: 4
      finishing_threshold: 4
      actions:
      - service: notify.robert
        data:
          message: "De wasmachine is klaar. \U0001F45A\U0001F455\U0001F4A6\n"
      - service: script.notify_living
        data:
          message: De wasmachine is klaar.
          icon: /config/www/img/washing-machine.png
      pre_actions: []
      wait_timeout:
        hours: 5
        minutes: 0
        seconds: 0
- id: '1662104026902'
  alias: 'Zolder: Wasdroger is klaar'
  description: Verstuur meldingen als de wasdroger klaar is.
  use_blueprint:
    path: metbril/appliance_has_finished.yaml
    input:
      power_sensor: sensor.tumble_dryer_power
      starting_hysteresis:
        hours: 0
        minutes: 0
        seconds: 55
      finishing_hysteresis:
        hours: 0
        minutes: 0
        seconds: 55
      starting_threshold: 2
      finishing_threshold: 3
      energy_sensor: sensor.tumble_dryer_energy
      wait_timeout:
        hours: 5
        minutes: 0
        seconds: 0
      price_sensor: sensor.energy_consumption_tarif_2
      actions:
      - service: notify.robert
        data:
          message: "\U0001F9FA\U0001F4A8 Wasdroger is klaar."
      - service: script.notify_living
        data:
          message: De wasdroger is klaar.
          icon: /config/www/img/dryer.png
      pre_actions: []
- id: '1662116397887'
  alias: 'Security: Warn when door is open after everyone has left'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.family
    from: home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.schuifpui_sensor_state_door_window
    state: 'on'
  action:
  - service: notify.parents
    data:
      message: '⚠️ Er is niemand meer thuis, maar er zijn nog vensters en deuren geopend. '
  mode: single
- id: '1662547518457'
  alias: 'Office: Printer powered notification'
  description: Stuur een notificatie wanneer de printer een tijdje is ingeschakeld
    en laat deze met een actieknop ook direct uitschakelen.
  trigger:
  - platform: state
    entity_id:
    - switch.samsung_ml_2850nd
    to: 'on'
    for:
      hours: 0
      minutes: 30
      seconds: 0
  condition: []
  action:
  - service: script.printer_off
    data: {}
  mode: single
- id: '1662548077258'
  alias: Garden > Lighting > Switch lights based on sun elevation
  description: 'Switch the outdoor lights on/off based on sun elevation. Elevation
    is an attribute of the sun integration. Elevetion is more accurate for darkness
    that a fixed time. Elevation varies over time. Note: I should create a blueprint
    for this some day.'
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: '1'
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: '1'
  condition: []
  action:
  - if:
    - condition: state
      entity_id: sun.sun
      attribute: rising
      state: true
    then:
    - service: light.turn_off
      target:
        entity_id: light.achtergevel
      data:
        transition: 5
    else:
    - service: light.turn_on
      target:
        entity_id: light.achtergevel
      data:
        transition: 5
        brightness_pct: 70
  mode: single
- id: '1662609361916'
  alias: 'System: Low battery level detection & notification for all battery sensors'
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      actions:
      - service: notify.admin
        data:
          message: "⚠️\U0001FAAB Deze sensoren hebben we lage batterij: {{sensors}}"
      - service: notify.persistent_notification
        data:
          message: 'Batterijen bijna leeg: {{sensors}}'
      exclude:
        entity_id:
        - sensor.iphone_robert_battery_level
        - sensor.iphone_van_bjorn_battery_level
        - sensor.patricius_battery_level
      time: '20:00:00'
- id: '1649842819459'
  alias: Office > Pause/Resume Music
  description: Pause playing music in the office when Robert in call and resume afterwards.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.robert_in_call
    to: 'on'
    id: Robert in gesprek
  - platform: state
    entity_id:
    - binary_sensor.robert_in_call
    to: 'off'
    id: Robert uit gesprek
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Robert in gesprek
      - condition: state
        entity_id: binary_sensor.working_from_home_robert
        state: 'on'
      - condition: state
        entity_id: media_player.office_speaker
        state: playing
      sequence:
      - service: media_player.media_pause
        data: {}
        target:
          entity_id: media_player.office_speaker
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.resume_office_music
      - service: notify.robert
        data:
          message: "\U0001F3B6 Muziek in kantoor gepauzeerd voor Teamsgesprek van
            Robert."
          title: Teams activity
    - conditions:
      - condition: trigger
        id:
        - Robert uit gesprek
      - condition: state
        entity_id: input_boolean.resume_office_music
        state: 'on'
      sequence:
      - service: media_player.media_play
        target:
          entity_id:
          - media_player.office_speaker
        data: {}
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.resume_office_music
        data: {}
      - service: notify.robert
        data:
          message: "\U0001F3B6 Muziek in kantoor voortgezet."
          title: Teams activity
  mode: single
- id: b27b246b-60fd-42d2-8516-cf37f2cfbc0f
  alias: 'Living > Media: Pause living speaker when TV is turned on'
  description: Pause living speaker when living TV is turned on.
  trigger:
  - platform: state
    entity_id: media_player.living_tv
    to: 'on'
  condition:
  - condition: state
    entity_id: media_player.living_speaker
    state: playing
  action:
  - service: media_player.media_pause
    data: {}
    target:
      entity_id: media_player.living_speaker
  - service: notify.living_tv
    data:
      message: Muziekspeler automatisch gepauzeerd.
  mode: single
- id: '1663046423659'
  alias: 'Office: Printer powered reminder'
  description: ''
  trigger:
  - platform: time_pattern
    minutes: '30'
    alias: Iedere 30 minuten
  condition:
  - condition: state
    entity_id: input_boolean.printer_reminder
    state: 'on'
  action:
  - service: script.1663045328980
    data: {}
  mode: single
- id: '1663046870503'
  alias: 'Office: Printer powered action'
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: PRINTER_OFF
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: PRINTER_REMIND
    id: printer_remind
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: PRINTER_IGNORE
  condition: []
  action:
  - if:
    - condition: trigger
      id: printer_remind
      alias: Triggered by printer remind
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.printer_reminder
    else:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.printer_reminder
  mode: single
- id: '1663925197803'
  alias: Living > Cube Actions
  description: ''
  use_blueprint:
    path: SirGoodenough/Zigbee2MQTT - Xiaomi Cube Controller.yaml
    input:
      remote: sensor.cube_action
      shake:
      - service: script.movie_pause
        data: {}
      fall:
      - service: scene.turn_on
        target:
          entity_id: scene.living_lighting_min
        metadata: {}
      rotate_cw_any:
      - if:
        - condition: device
          device_id: 0b66a0b9458a2619643802bab0864d75
          domain: media_player
          entity_id: media_player.living_speaker
          type: is_playing
        then:
        - service: media_player.volume_up
          data: {}
          target:
            entity_id: media_player.living_speaker
      rotate_ccw_any:
      - if:
        - condition: device
          device_id: 0b66a0b9458a2619643802bab0864d75
          domain: media_player
          entity_id: media_player.living_speaker
          type: is_playing
        then:
        - service: media_player.volume_down
          data: {}
          target:
            entity_id: media_player.living_speaker
- id: 4f63071f-16ae-419e-bf54-8064a147ad3e
  alias: System > HACS Updates
  description: Verstuur een notificatie als er updates zijn van onderdelen die met
    HACS zijn geïnstalleerd.
  trigger:
  - platform: state
    entity_id: sensor.hacs
  - platform: homeassistant
    event: start
  condition:
  - condition: template
    value_template: '{{ states(''sensor.hacs'') | float(0) > 0 }}'
  action:
  - service: persistent_notification.create
    data:
      title: HACS Updates
      message: "Te verwerken [HACS-updates](/hacs): {% for repo in state_attr('sensor.hacs',
        'repositories') %}\n  * {{repo.display_name}} {{\n  repo.installed_version}}
        -> {{\n  repo.available_version}}\n{% endfor %}\n"
      notification_id: update_hacs
  mode: single
- id: '1665290435363'
  alias: Living > Media > Apple TV Movie Time
  description: Play a movie in the living.
  trigger:
  - platform: state
    entity_id:
    - media_player.apple_tv_woomkamer
    to: playing
    id: playing
  - platform: state
    entity_id:
    - media_player.apple_tv_woomkamer
    to: paused
    id: paused
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: playing
      sequence:
      - service: script.movie_time_start
        data: {}
    - conditions:
      - condition: trigger
        id: paused
      sequence:
      - service: script.movie_time_stop
        data: {}
  mode: single
- id: '1665293798660'
  alias: Netflix Movie Time
  description: Set the living for movie time
  trigger:
  - platform: state
    entity_id: media_player.living_tv
    attribute: source
    to: Netflix
    id: started
  - platform: state
    entity_id: media_player.living_tv
    attribute: is_volume_muted
    from: 'true'
    to: 'false'
    id: playing
  - platform: state
    entity_id: media_player.living_tv
    attribute: is_volume_muted
    from: 'false'
    to: 'true'
    id: paused
  condition:
  - condition: state
    entity_id: media_player.living_tv
    attribute: source
    state: Netflix
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: started
      sequence:
      - service: script.movie_time_start
        data: {}
    - conditions:
      - condition: trigger
        id: playing
      sequence:
      - service: script.movie_time_start
        data: {}
    - conditions:
      - condition: trigger
        id: paused
      sequence:
      - service: script.movie_time_stop
        data: {}
  mode: single
- id: '1666340185709'
  alias: Office > Printer > Notify when connected.
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.samsung_ml_2850nd
    to: 'on'
  condition: []
  action:
  - service: notify.family
    data:
      message: "\U0001F5A8 Printer kan worden gebruikt.."
  - service: notify.persistent_notification
    data:
      message: "\U0001F5A8 Printer kan worden gebruikt.."
  mode: single
- id: 79b3abe8-e220-4563-a55b-74bd3b850a3b
  alias: Living > Lighting > Automated
  description: Schakel vlak voor zonsondergang de verlichting in de woonkamer in.
  trigger:
  - event: sunset
    offset: -00:30:00
    platform: sun
    id: Sunset
    alias: Sunset
  - platform: time
    at: '23:30'
    id: Late
    alias: Late
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Sunset
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id:
          - scene.living_lighting_cosy
      - service: script.toot_engine
        data:
          message: Het wordt schemerig. De verlichting is ingeschakeld om het een
            beetje gezellig te maken.
          who: mastodon
    - conditions:
      - condition: trigger
        id: Late
      sequence:
      - condition: state
        entity_id: light.living
        state: 'on'
        alias: Test if Woonkamerverlichting is still on
      - condition: not
        conditions:
        - condition: state
          entity_id: input_boolean.occupancy_vacation
          state: 'on'
        - condition: state
          entity_id: input_boolean.occupancy_party
          state: 'on'
      - service: scene.turn_on
        target:
          entity_id:
          - scene.living_lighting_dimmed
        data: {}
  mode: single
- id: '1667809761090'
  alias: Safety > Meteoalarm Notification (new)
  description: '

    Send notification on each entity update (not only at state change)

    '
  trigger:
  - platform: state
    entity_id: binary_sensor.meteoalarm_zuid_holland
  condition:
  - alias: There is an active alert
    condition: state
    entity_id: binary_sensor.meteoalarm_zuid_holland
    state: 'on'
  action:
  - service: notify.family
    data:
      title: '⚠️ {{ state_attr(''binary_sensor.meteoalarm_zuid_holland'', ''headline'').split(''
        - '')[0] }}

        '
      message: '{{ state_attr(''binary_sensor.meteoalarm_zuid_holland'', ''description'')
        | replace(''\n'', '' '') }}

        '
      data:
        url: '{{ state_attr(''binary_sensor.meteoalarm_zuid_holland'', ''web'') }}

          '
  - service: script.toot_engine
    data:
      who: mastodon
      message: "⚠️ {{ state_attr('binary_sensor.meteoalarm_zuid_holland', 'headline').split('
        - ')[0] }}: {{ state_attr( 'binary_sensor.meteoalarm_zuid_holland', 'description'
        ) |\n    replace('\\n', ' ') }} {{ state_attr( 'binary_sensor.meteoalarm_zuid_holland',
        'web' ) }} #MeteoAlarm #ZuidHolland"
  mode: queued
- id: f19127bd-aa93-44fe-aac9-0b2c4a626dca
  alias: System > Enable eco mode by default
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  - platform: time
    at: 03:00:00
  condition:
  - condition: state
    entity_id: input_boolean.eco_mode
    state: 'off'
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.eco_mode
    data: {}
  - service: persistent_notification.create
    data:
      message: Eco mode automatically by default enabled.
      title: Eco Mode
      notification_id: eco_mode
  initial_state: true
  mode: single
- id: '1672391012431'
  alias: Living > Lighting > Shortcut
  description: Snelknop bij de deur. 1x = aan, lang=uit, 2x = max
  use_blueprint:
    path: EPMatt/ikea_e1812.yaml
    input:
      integration: Zigbee2MQTT
      controller_entity: sensor.snelknop_woonkamer_action
      helper_last_controller_event: input_text.snelknop_woonkamer_last_controller_event
      action_button_short:
      - service: scene.turn_on
        target:
          entity_id: scene.living_lighting_min
        metadata: {}
      action_button_long:
      - service: scene.turn_on
        target:
          entity_id: scene.living_lighting_off
        metadata: {}
      action_button_double:
      - service: scene.turn_on
        data: {}
        target:
          entity_id:
          - scene.living_lighting_max
      button_double_press: true
      helper_double_press_delay: 1000
- id: '1672486229153'
  alias: System > Network > WAN IP changed
  description: Notify when WAN IP changes
  trigger:
  - platform: state
    entity_id:
    - sensor.myip
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state not in [''unknown'', ''unavailable'',
      None] }}'
  - condition: template
    value_template: '{{ trigger.from_state.state not in [''unknown'', ''unavailable'',
      None] }}'
  action:
  - service: notify.admin
    data:
      message: 'WAN-IP is gewijzigd: {{ states(''sensor.myip'') }}'
  - service: persistent_notification.create
    data:
      message: 'WAN-IP is gewijzigd: {{ states(''sensor.myip'') }}'
  - service: script.toot_engine
    data:
      message: 'Fijn! #VodafoneZiggo heeft mijn externe IP-adres gewijzigd. Gelukkig
        heb ik geen externe toegang nodig tot interne systemen.'
  mode: single
- id: '1679143739246'
  alias: 'Huis: Do not disturb mode'
  description: Let do not disturb follow quiet hours.
  trigger:
  - platform: state
    entity_id:
    - schedule.quiet_hours
    to: 'on'
    id: Stiltetijd Aan
  - platform: state
    entity_id:
    - schedule.quiet_hours
    to: 'off'
    id: Stittetijd Uit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Stiltetijd Aan
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.do_not_disturb
    - conditions:
      - condition: trigger
        id:
        - Stittetijd Uit
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.do_not_disturb
  mode: single
- id: '1679302451294'
  alias: Keuken > Koelkast uitgeschakeld
  description: ''
  trigger:
  - platform: device
    type: turned_off
    device_id: fc39d2c003d6982efb53a3ddefa678fb
    entity_id: switch.refrigerator
    domain: switch
  condition: []
  action:
  - service: notify.robert
    data:
      message: Koelkast is uitgeschakeld.
  mode: single
- id: b17bc209-ef49-4199-bb5c-fae6c3f428a4
  alias: Living > Lighting > Lights off during vacations
  description: Schakel de verlichting tijdens vakanties automatisch uit tussen 23:00
    en 23:30.
  trigger:
  - platform: time
    at: '23:00:00'
  condition:
  - condition: state
    entity_id: input_boolean.occupancy_vacation
    state: 'on'
  action:
  - delay: '{{ "0:" ~ ((range(0,29)|random)|int) ~ ":0" }}'
  - service: light.turn_off
    entity_id: light.living
  - service: persistent_notification.create
    data:
      message: Verlichting automatisch uitgeschakeld om {{ states('sensor.time') }}.
  mode: single
- id: '1658943860235'
  alias: 'Living: Inschakelen TV'
  description: Door deze automatisering te activeren, verschijnt de power on knop
    in de mediaspeler in het dashboard.
  use_blueprint:
    path: cvroque/webostv_turn_on.yaml
    input:
      webostv: media_player.living_tv
      webostv_mac: 04:4E:AF:13:F9:7C
- id: '1684594109974'
  alias: Appliances > Bike Charger Management
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bike_charger_plug
    to: 'on'
    from: 'off'
    id: Charger Started
  - platform: state
    entity_id:
    - binary_sensor.bike_charger_plug
    to: 'off'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: Charger Finished
    from: 'on'
  - platform: homeassistant
    event: start
    id: Herstart
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Charger Started
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.bike_charger_plug_start_energy
        data:
          value: '{{ states(''sensor.bike_charger_plug_energy'') | float(0) }}'
    - conditions:
      - condition: trigger
        id:
        - Charger Finished
      - condition: state
        entity_id: binary_sensor.bike_charger_plug
        state: 'off'
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.eco_mode
          state: 'on'
        - condition: device
          type: is_on
          device_id: fc8175d314fecd80e9526220b04ae4b7
          entity_id: 0bf0b05b7ad2842d1f82e6c6b0aeeab2
          domain: switch
        then:
        - type: turn_off
          device_id: fc8175d314fecd80e9526220b04ae4b7
          entity_id: switch.bike_charger_plug
          domain: switch
      - service: notify.parents
        data:
          message: "De fietslader is klaar. \U0001F6B2\U0001F50B⚡️\U0001F50C"
      - service: script.notify_living
        data:
          icon: /config/www/img/bike-charger.png
          message: De fietslader is klaar.
      - variables:
          cheer: '{{ [''Zo!'', ''Eindelijk!'', ''Hè, hè.'', "Dat heeft even geduurd.",
            "Dat duurde lang.", "Daar kwam geen eind aan.", "Nou zeg!", "Nou, nou.",
            "Tjongejonge", "Tjemig", "Yes!", "Joepie!"] | random }}'
          icon: "{{ '\U0001F6B2\U0001F50B⚡️\U0001F50C' | list | random }}"
      - service: script.toot_engine
        data:
          who: mastodon
          message: '{{ cheer }} {{ icon }} De fietsaccu is weer opgeladen.'
  mode: single
- id: '1696254669833'
  alias: Office > Force preset to none
  description: ''
  trigger:
  - platform: state
    entity_id:
    - climate.office
    attribute: preset_mode
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: climate.office
      attribute: preset_mode
      state: none
      alias: Voorinstelling kantoorverwarming is uitgeschakeld
      for:
        hours: 0
        minutes: 0
        seconds: 0
    alias: Niet
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: none
    target:
      entity_id: climate.office
  - service: notify.persistent_notification
    data:
      message: Voorinstelling kantoorverwarming geforceerd naar 'none'.
  mode: single
- id: '1698345068706'
  alias: Kitchen > Koelkast Always On
  description: ''
  use_blueprint:
    path: metbril/always_on.yaml
    input:
      target_entity: switch.refrigerator
      on_duration:
        hours: 0
        minutes: 0
        seconds: 0
- id: '1698345137071'
  alias: 'Lighting: Always On Kledingkast Bjorn'
  description: ''
  use_blueprint:
    path: metbril/always_on.yaml
    input:
      target_entity: light.kledingkast_bjorn
      on_duration:
        hours: 0
        minutes: 0
        seconds: 0
- alias: 'Huis: Herinnering over afwezigheid'
  description: Notify when vacation or guest occupancy, and daily when still in vacation
    or guest mode. These modes let automations behave differently.
  id: '1661885320722'
  trigger:
  - platform: state
    entity_id: sensor.occupancy
    to: vacation
  - platform: state
    entity_id: sensor.occupancy
    to: guests
  - platform: time
    at: 09:00:00
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: sensor.occupancy
      state: vacation
    - condition: state
      entity_id: sensor.occupancy
      state: guests
  variables:
    mode: '{{ states(''sensor.occupancy'') }}'
    name: '{{ ''input_boolean.occupancy_'' + mode }}'
    label: '{{ state_attr(name, ''friendly_name'') | lower }}'
  action:
  - service: notify.admin
    data:
      title: Bezetting
      message: \U0001F9F7 De woningbezetting is nu ingesteld op {{ label }}.
- id: '1661884728867'
  alias: 'Huis > Occupancy: Synchroniseer bezetting status'
  description: Synchroniseer alle knoppen. Als er een wordt ingeschakeld, worden alle
    andere uitgeschakeld. Als alles is uitgeschakeld, wordt Thuis ingeschakeld.
  trigger:
  - platform: state
    entity_id:
    - input_boolean.occupancy_home
    - input_boolean.occupancy_asleep
    - input_boolean.occupancy_away
    - input_boolean.occupancy_party
    - input_boolean.occupancy_guests
    - input_boolean.occupancy_vacation
  action:
  - variables:
      all_off: '{{ states.input_boolean | select(''search'', ''occupancy_'')  | selectattr(''state'',
        ''eq'', ''on'') | map(attribute=''entity_id'') | list | count == 0 }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''on'' }}'
      sequence:
      - service: input_boolean.turn_off
        data:
          entity_id: "{{ states.input_boolean | select('search', 'occupancy_') | \n
            \ map(attribute='entity_id') |\n  reject('equalto', trigger.entity_id)
            | list | join(', ') }}\n"
    - conditions:
      - condition: template
        value_template: "{{ states.input_boolean | select('search', 'occupancy_')
          \ \n  | selectattr('state', 'eq', 'on') \n  | map(attribute='entity_id')
          | list | count == 0 }}"
      sequence:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.occupancy_home
  initial_state: true
  mode: queued
- id: '1699508412007'
  alias: 'System: Home Assistant started'
  description: Stuur een notificatie zodra Home Assistant is gestart.
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: notify.admin
    data:
      message: Home Assistant is gestart.
  - variables:
      cheer: '{{ [''Halleluja!'', ''Yes!'', ''Gelukkig!'', ''Joepie!'', ''We have
        lift-off!'', ''Touch down!'', ''The eagle has landed.'', ''En, actie!'', ''Goed
        bezig!'', ''Goed gedaan, jochie!'', ''Lekkerrr!'', ''Go, go, go!''] | random
        }}'
      emoji: "{{ '\U0001F680✈️\U0001F6EB\U0001F6EC\U0001F6E9️\U0001F3AC\U0001F64F\U0001F973\U0001F525'
        | list | random }}"
  - service: script.toot_engine
    data:
      who: mastodon
      message: '{{ cheer }} {{ emoji }} Home Assistant is gestart.'
  mode: single
- id: '1699617264939'
  alias: 'Security: AdGuard Always On'
  description: Switch on AdGuard when it's been disabled for more than 30 minutes.
  use_blueprint:
    path: metbril/always_on.yaml
    input:
      target_entity: switch.adguard_protection
      on_duration:
        hours: 0
        minutes: 30
        seconds: 0
- id: '1699710901676'
  alias: 'System: Clear TTS caches'
  description: Clear all TTS caches every day at 3:00.
  trigger:
  - platform: time
    at: 03:00:00
  condition: []
  action:
  - service: tts.clear_cache
    data: {}
  - service: chime_tts.clear_cache
    data: {}
  mode: single
- id: '1700326949347'
  alias: Lamp voorraadkast lang aan
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.pantry_light
    to: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.garage_motion
    state: 'off'
  - condition: state
    entity_id: timer.pantry_light
    state: idle
  action:
  - service: notify.admin
    data:
      message: Licht voorraadkast is al 15 minuten aan, maar er is geen beweging en
        geen timer.
      title: Controleer garage
  mode: single
- id: '1702046592143'
  alias: Garage > Motion-activated Light
  description: Schakelen lamp voorraadkast op basis van beweging
  use_blueprint:
    path: homeassistant/motion_light.yaml
    input:
      motion_entity: binary_sensor.garage_motion
      light_target:
        entity_id: light.pantry_light
      no_motion_wait: 240
- id: '1662548148472'
  alias: Energy > Post Gas Consumption to MinderGas.nl
  description: Post gas consumption to mindergas.nl daily at 00:15. The gas meter
    reading is updated once every hour, within the first 10 minutes after the full
    hour. Posting as soon as possible after that, with a safe margin.
  trigger:
  - platform: time
    at: 00:15:00
  condition:
  - condition: numeric_state
    entity_id: sensor.gas_consumption
    above: '0'
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.yesterday
      state: unavailable
  action:
  - service: script.mindergas
    data:
      date: '{{ states(''sensor.yesterday'') }}'
      reading: '{{ states(''sensor.gas_consumption'') }}'
  - service: script.toot_engine
    data:
      who: mastodon
      message: "\U0001F525 The daily gas usage has been sent to Mindergas using their
        member API. #gas #energy #savings #sustainability\n\nhttps://mindergas.nl/"
  mode: single
- id: '1703782279413'
  alias: Lighting > Leeslamp dimmer controller
  description: ''
  use_blueprint:
    path: EPMatt/philips_324131092621.yaml
    input:
      integration: Zigbee2MQTT
      controller_entity: sensor.leeshoek_dimmer_action
      helper_last_controller_event: input_text.leeshoek_dimmer_action
      action_button_on_short:
      - type: turn_on
        device_id: 29811c6724d2db28a3c36f03e9181d4d
        entity_id: 75d7781e36c571b13bf88743a3d94949
        domain: light
      action_button_off_short:
      - type: turn_off
        device_id: 29811c6724d2db28a3c36f03e9181d4d
        entity_id: 75d7781e36c571b13bf88743a3d94949
        domain: light
      action_button_up_long:
      - device_id: 29811c6724d2db28a3c36f03e9181d4d
        domain: light
        entity_id: 75d7781e36c571b13bf88743a3d94949
        type: brightness_increase
      action_button_down_long:
      - device_id: 29811c6724d2db28a3c36f03e9181d4d
        domain: light
        entity_id: 75d7781e36c571b13bf88743a3d94949
        type: brightness_decrease
